% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RushWorker.R
\name{RushWorker}
\alias{RushWorker}
\title{Rush}
\description{
Rush
}
\section{Super class}{
\code{\link[rush:Rush]{rush::Rush}} -> \code{RushWorker}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{worker_id}}{(\code{character(1)})\cr
Identifier of the worker.}

\item{\code{constants}}{(\code{list()})\cr
List of constants.}

\item{\code{host}}{(\code{character(1)})\cr
Local or remote host.}

\item{\code{initializer}}{(\code{character(1)})\cr
Future or batch initializer.}

\item{\code{heartbeat}}{(\code{callr::RBackgroundProcess})\cr
Background process for the heartbeat.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{terminate}}{(\code{logical(1)})\cr
Whether to shutdown the worker.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RushWorker-new}{\code{RushWorker$new()}}
\item \href{#method-RushWorker-unregister_worker}{\code{RushWorker$unregister_worker()}}
\item \href{#method-RushWorker-pop_task}{\code{RushWorker$pop_task()}}
\item \href{#method-RushWorker-push_results}{\code{RushWorker$push_results()}}
\item \href{#method-RushWorker-clone}{\code{RushWorker$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="await_workers"><a href='../../rush/html/Rush.html#method-Rush-await_workers'><code>rush::Rush$await_workers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="block_latest_results"><a href='../../rush/html/Rush.html#method-Rush-block_latest_results'><code>rush::Rush$block_latest_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="create_worker_script"><a href='../../rush/html/Rush.html#method-Rush-create_worker_script'><code>rush::Rush$create_worker_script()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="detect_failed_tasks"><a href='../../rush/html/Rush.html#method-Rush-detect_failed_tasks'><code>rush::Rush$detect_failed_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="detect_lost_workers"><a href='../../rush/html/Rush.html#method-Rush-detect_lost_workers'><code>rush::Rush$detect_lost_workers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_failed_tasks"><a href='../../rush/html/Rush.html#method-Rush-fetch_failed_tasks'><code>rush::Rush$fetch_failed_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_finished_tasks"><a href='../../rush/html/Rush.html#method-Rush-fetch_finished_tasks'><code>rush::Rush$fetch_finished_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_latest_results"><a href='../../rush/html/Rush.html#method-Rush-fetch_latest_results'><code>rush::Rush$fetch_latest_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_queued_tasks"><a href='../../rush/html/Rush.html#method-Rush-fetch_queued_tasks'><code>rush::Rush$fetch_queued_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_results"><a href='../../rush/html/Rush.html#method-Rush-fetch_results'><code>rush::Rush$fetch_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_running_tasks"><a href='../../rush/html/Rush.html#method-Rush-fetch_running_tasks'><code>rush::Rush$fetch_running_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="fetch_tasks"><a href='../../rush/html/Rush.html#method-Rush-fetch_tasks'><code>rush::Rush$fetch_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="format"><a href='../../rush/html/Rush.html#method-Rush-format'><code>rush::Rush$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="print"><a href='../../rush/html/Rush.html#method-Rush-print'><code>rush::Rush$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="push_priority_tasks"><a href='../../rush/html/Rush.html#method-Rush-push_priority_tasks'><code>rush::Rush$push_priority_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="push_tasks"><a href='../../rush/html/Rush.html#method-Rush-push_tasks'><code>rush::Rush$push_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="read_hashes"><a href='../../rush/html/Rush.html#method-Rush-read_hashes'><code>rush::Rush$read_hashes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="reset"><a href='../../rush/html/Rush.html#method-Rush-reset'><code>rush::Rush$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="start_workers"><a href='../../rush/html/Rush.html#method-Rush-start_workers'><code>rush::Rush$start_workers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="stop_workers"><a href='../../rush/html/Rush.html#method-Rush-stop_workers'><code>rush::Rush$stop_workers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="wait_tasks"><a href='../../rush/html/Rush.html#method-Rush-wait_tasks'><code>rush::Rush$wait_tasks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="worker_info"><a href='../../rush/html/Rush.html#method-Rush-worker_info'><code>rush::Rush$worker_info()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rush" data-topic="Rush" data-id="write_hashes"><a href='../../rush/html/Rush.html#method-Rush-write_hashes'><code>rush::Rush$write_hashes()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RushWorker-new"></a>}}
\if{latex}{\out{\hypertarget{method-RushWorker-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RushWorker$new(
  instance_id,
  config = redux::redis_config(),
  host,
  initializer,
  worker_id = NULL,
  heartbeat_period = NULL,
  heartbeat_expire = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{instance_id}}{(\code{character(1)})\cr
Identifier of the rush instance.}

\item{\code{config}}{(\link[redux:redis_config]{redux::redis_config})\cr
Redis configuration.}

\item{\code{host}}{(\code{character(1)})\cr
Local or remote host.}

\item{\code{initializer}}{(\code{character(1)})\cr
Future or batch initializer.}

\item{\code{worker_id}}{(\code{character(1)})\cr
Identifier of the worker.}

\item{\code{heartbeat_period}}{(\code{numeric(1)})\cr
Period of the heartbeat.}

\item{\code{heartbeat_expire}}{(\code{numeric(1)})\cr
Expiration of the heartbeat.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RushWorker-unregister_worker"></a>}}
\if{latex}{\out{\hypertarget{method-RushWorker-unregister_worker}{}}}
\subsection{Method \code{unregister_worker()}}{
Unregister worker.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RushWorker$unregister_worker()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RushWorker-pop_task"></a>}}
\if{latex}{\out{\hypertarget{method-RushWorker-pop_task}{}}}
\subsection{Method \code{pop_task()}}{
Pop a task from the queue.
Task is moved to the running tasks.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RushWorker$pop_task(timeout = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timeout}}{(\code{numeric(1)})\cr
Time to wait for task in seconds.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RushWorker-push_results"></a>}}
\if{latex}{\out{\hypertarget{method-RushWorker-push_results}{}}}
\subsection{Method \code{push_results()}}{
Pushes results to the data base.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RushWorker$push_results(
  keys,
  yss = list(),
  extra = list(),
  conditions = list(),
  status = "finished"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{(\code{character(1)})\cr
Keys of the associated tasks.}

\item{\code{yss}}{(named \code{list()})\cr
List of lists of named results.}

\item{\code{extra}}{(named \code{list()})\cr
List of lists of additional information stored along with the results.}

\item{\code{conditions}}{(named \code{list()})\cr
List of lists of conditions.}

\item{\code{status}}{(\code{character(1)})\cr
Status of the tasks.
If \code{finished} the tasks are moved to the finished tasks.
If \code{error} the tasks are moved to the failed tasks.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RushWorker-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RushWorker-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RushWorker$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
